"g_metric_faccompDenseSp10"= g_metric_FacCompDense10,"g_dr_metric_FacCompDense10"=g_dr_metric_FacCompDense10,"h_metric_faccompDenseSp10"=h_metric_FacCompDense10, "j_metric_faccompDenseSp10"=j_metric_FacCompDense10,
"g_metric_faccompDenseSp20"= g_metric_FacCompDense20,"g_dr_metric_FacCompDense20"=g_dr_metric_FacCompDense20,"h_metric_faccompDenseSp20"=h_metric_FacCompDense20, "j_metric_faccompDenseSp20"=j_metric_FacCompDense20
)
table<-as.data.frame(matrix(NA,nrow=63, ncol=8,dimnames=list(NULL,c("success_env","success_comp","success_fac","n_sp","Facilitation","Competition","sparsity","model"))))
for(i in 1:length(names(all))){
if(!is.null(all[[i]]$success_env)) table[i,"success_env"]<-all[[i]]$success_env
if(!is.null(all[[i]]$success_comp)) table[i,"success_comp"]<-all[[i]]$success_comp
if(!is.null(all[[i]]$success_fac)) table[i,"success_fac"]<-all[[i]]$success_fac
if(length(grep("5",names(all)[i]))>0) table[i,"n_sp"]<-5
if(length(grep("10",names(all)[i]))>0) table[i,"n_sp"]<-10
if(length(grep("20",names(all)[i]))>0) table[i,"n_sp"]<-20
if(length(grep("fac",names(all)[i]))>0){ table[i,"Facilitation"]<-"facilitation"}#else{table[i,"facilition"]<-NULL}
if(length(grep("comp",names(all)[i]))>0){ table[i,"Competition"]<-"competition"}#else{table[i,"competition"]<-NULL}
#if(!(length(grep("comp",names(all)[i]))>0) | length(grep("fac",names(all)[i]))>0) {table[i,"Comp_fac"]<-"comp_fac"}else{table[i,"Comp_fac"]<-NULL}
if(length(grep("Dense",names(all)[i]))>0){ table[i,"sparsity"]<-"dense"}else{table[i,"sparsity"]<-"sparse"}
if(length(grep("j_",names(all)[i]))>0) table[i,"model"]<-"CM"
if(length(grep("g_m",names(all)[i]))>0) table[i,"model"]<-"GJAM"
if(length(grep("g_d",names(all)[i]))>0) table[i,"model"]<-"DR-GJAM"
if(length(grep("h_",names(all)[i]))>0) table[i,"model"]<-"HMSC"
}
table_comp<-table[which(!is.na(table$success_comp)),]
table_fac<-table[which(!is.na(table$success_fac)),]
tc<-cbind(table_comp$success_comp,table_comp$model,rep("All",nrow(table_comp)),rep("Int",nrow(table_comp)))
tc<-rbind(tc,cbind(table_comp[which(table_comp$n_sp==5),"success_comp"],table_comp[which(table_comp$n_sp==5),"model"],rep("5",sum(table_comp$n_sp==5)),rep("Int",sum(table_comp$n_sp==5))))
tc<-rbind(tc,cbind(table_comp[which(table_comp$n_sp==10),"success_comp"],table_comp[which(table_comp$n_sp==10),"model"],rep("10",sum(table_comp$n_sp==10)),rep("Int",sum(table_comp$n_sp==10))))
tc<-rbind(tc,cbind(table_comp[which(table_comp$n_sp==20),"success_comp"],table_comp[which(table_comp$n_sp==20),"model"],rep("20",sum(table_comp$n_sp==20)),rep("Int",sum(table_comp$n_sp==20))))
tc<-rbind(tc,cbind(table_comp[which(table_comp$sparsity=="dense"),"success_comp"],table_comp[which(table_comp$sparsity=="dense"),"model"],rep("dense",sum(table_comp$sparsity=="dense")),rep("Int",sum(table_comp$sparsity=="dense"))))
tc<-rbind(tc,cbind(table_comp[which(table_comp$sparsity=="sparse"),"success_comp"],table_comp[which(table_comp$sparsity=="sparse"),"model"],rep("sparse",sum(table_comp$sparsity=="sparse")),rep("Int",sum(table_comp$sparsity=="sparse"))))
tc<-rbind(tc,cbind(table_comp$success_env,table_comp$model,rep("All_env",nrow(table_comp)),rep("Env",nrow(table_comp))))
tc<-rbind(tc,cbind(table_comp[which(table_comp$n_sp==5),"success_env"],table_comp[which(table_comp$n_sp==5),"model"],rep("5_env",sum(table_comp$n_sp==5)),rep("Env",sum(table_comp$n_sp==5))))
tc<-rbind(tc,cbind(table_comp[which(table_comp$n_sp==10),"success_env"],table_comp[which(table_comp$n_sp==10),"model"],rep("10_env",sum(table_comp$n_sp==10)),rep("Env",sum(table_comp$n_sp==10))))
tc<-rbind(tc,cbind(table_comp[which(table_comp$n_sp==20),"success_env"],table_comp[which(table_comp$n_sp==20),"model"],rep("20_env",sum(table_comp$n_sp==20)),rep("Env",sum(table_comp$n_sp==20))))
tc<-data.frame("success"=as.numeric(tc[,1]),"model"=tc[,2],"fac"=tc[,3],"int"=rep("Competition",nrow(tc)),"col"=tc[,4])
tf<-cbind(table_fac$success_fac,table_fac$model,rep("All",nrow(table_fac)),rep("Int",nrow(table_fac)))
tf<-rbind(tf,cbind(table_fac[which(table_fac$n_sp==5),"success_fac"],table_fac[which(table_fac$n_sp==5),"model"],rep("5",sum(table_fac$n_sp==5)),rep("Int",sum(table_fac$n_sp==5))))
tf<-rbind(tf,cbind(table_fac[which(table_fac$n_sp==10),"success_fac"],table_fac[which(table_fac$n_sp==10),"model"],rep("10",sum(table_fac$n_sp==10)),rep("Int",sum(table_fac$n_sp==10))))
tf<-rbind(tf,cbind(table_fac[which(table_fac$n_sp==20),"success_fac"],table_fac[which(table_fac$n_sp==20),"model"],rep("20",sum(table_fac$n_sp==20)),rep("Int",sum(table_fac$n_sp==20))))
tf<-rbind(tf,cbind(table_fac[which(table_fac$sparsity=="dense"),"success_fac"],table_fac[which(table_fac$sparsity=="dense"),"model"],rep("dense",sum(table_fac$sparsity=="dense")),rep("Int",sum(table_fac$sparsity=="dense"))))
tf<-rbind(tf,cbind(table_fac[which(table_fac$sparsity=="sparse"),"success_fac"],table_fac[which(table_fac$sparsity=="sparse"),"model"],rep("sparse",sum(table_fac$sparsity=="sparse")),rep("Int",sum(table_fac$sparsity=="sparse"))))
tf<-rbind(tf,cbind(table_fac$success_env,table_fac$model,rep("All_env",nrow(table_fac)),rep("Env",nrow(table_fac))))
tf<-rbind(tf,cbind(table_fac[which(table_fac$n_sp==5),"success_env"],table_fac[which(table_fac$n_sp==5),"model"],rep("5_env",sum(table_fac$n_sp==5)),rep("Env",sum(table_fac$n_sp==5))))
tf<-rbind(tf,cbind(table_fac[which(table_fac$n_sp==10),"success_env"],table_fac[which(table_fac$n_sp==10),"model"],rep("10_env",sum(table_fac$n_sp==10)),rep("Env",sum(table_fac$n_sp==10))))
tf<-rbind(tf,cbind(table_fac[which(table_fac$n_sp==20),"success_env"],table_fac[which(table_fac$n_sp==20),"model"],rep("20_env",sum(table_fac$n_sp==20)),rep("Env",sum(table_fac$n_sp==20))))
tf<-data.frame("success"=as.numeric(tf[,1]),"model"=tf[,2],"fac"=tf[,3],"int"=rep("Facilitation",nrow(tf)),"col"=tf[,4])
table<-rbind(tf,tc)
p<-ggplot(data=table)+geom_boxplot(aes(y=as.numeric(success),x=as.factor(fac),fill=as.factor(col)))+
scale_x_discrete(name="Parameters", breaks=c("All","5","10","20","dense","sparse","All_env","5_env","10_env","20_env"),
labels=c("All","5","10","20","dense","sparse","All","5","10","20"),limits=c("All","5","10","20","dense","sparse","All_env","5_env","10_env","20_env"))+
scale_y_continuous(name="% success")+
scale_fill_discrete(name = "Success in retrieving", labels = c("Sensibility (non int.)","Sensitivity (int.)"))+theme_bw()+ theme(axis.text.x = element_text(angle = 45, hjust = 1),legend.position="top",plot.title = element_text(hjust = 0.5))+
facet_grid( int~model, scales="free")+ggtitle("Pairs indentification by correlation")
p
all_part<-list("j_metric_e5"=j_metric_e5_p, "j_metric_e10"=j_metric_e10_p,"j_metric_e20"=j_metric_e20_p,
"j_metric_facDense5"=j_metric_facDense5_p,"j_metric_facDense10"=j_metric_facDense10_p,"j_metric_facDense20"=j_metric_facDense20,
"j_metric_facSparse5"=j_metric_facSparse5_p,"j_metric_facSparse10"=j_metric_facSparse10_p,"j_metric_facSparse20"=j_metric_facSparse20_p,
"j_metric_compDense5"=j_metric_compDense5_p,"j_metric_compDense10"=j_metric_compDense10_p,"j_metric_compDense20"=j_metric_compDense20_p,
"j_metric_compSparse5"=j_metric_compSparse5_p, "j_metric_compSparse10"=j_metric_compSparse10_p, "j_metric_compSparse20"=j_metric_compSparse20_p,"j_metric_faccompSparseSp5"=j_metric_FacCompSparse5_p, "j_metric_faccompSparseSp10"=j_metric_FacCompSparse10_p,
"j_metric_faccompSparseSp20"=j_metric_FacCompSparse20_p,
"j_metric_faccompDenseSp5"=j_metric_FacCompDense5_p,
"j_metric_faccompDenseSp10"=j_metric_FacCompDense10_p,
"j_metric_faccompDenseSp20"=j_metric_FacCompDense20_p,
"g_metric_e5"=g_metric_e5_p,"g_dr_metric_e5"=g_dr_metric_e5_p,"h_metric_e5"=h_metric_e5_p,
"g_metric_e10"=g_metric_e10_p,"g_dr_metric_e10"=g_dr_metric_e10_p,"h_metric_e10"=h_metric_e10_p,
"g_metric_e20"=g_metric_e20_p,"g_dr_metric_e20"=g_dr_metric_e20_p,"h_metric_e20"=h_metric_e20_p,
"h_metric_facDense5"=h_metric_facDense5_p,"g_metric_facDense5"=g_metric_facDense5_p,"g_dr_facDense5"=g_dr_metric_facDense5_p,
"h_metric_facDense10"=h_metric_facDense10_p,"g_metric_facDense10"=g_metric_facDense10_p,"g_dr_metric_facDense10"=g_dr_metric_facDense10_p,
"h_metric_facDense20"=h_metric_facDense20_p,"g_metric_facDense20"=g_metric_facDense20_p,"g_dr_metric_facDense20"=g_dr_metric_facDense20_p,
"h_metric_facSparse5"=h_metric_facSparse5_p,"g_metric_facSparse5"=g_metric_facSparse5_p,"g_dr_metric_facSparse5"=g_dr_metric_facSparse5_p,
"h_metric_facSparse10"=h_metric_facSparse10_p,"g_metric_facSparse10"=g_metric_facSparse10_p,"g_dr_metric_facSparse10"=g_dr_metric_facSparse10_p,
"h_metric_facSparse20"=h_metric_facSparse20_p,"g_metric_facSparse20"=g_metric_facSparse20_p,"g_dr_metric_facSparse20"=g_dr_metric_facSparse20_p,
"h_metric_compDense5"=h_metric_compDense5_p,"g_metric_compDense5"=g_metric_compDense5_p,"g_dr_metric_compDense5"=g_dr_metric_compDense5_p,
"h_metric_compDense10"=h_metric_compDense10_p,"g_metric_compDense10"=g_metric_compDense10_p,"g_dr_metric_compDense10"=g_dr_metric_compDense10_p,
"h_metric_compDense20"=h_metric_compDense20_p,"g_metric_compDense20"=g_metric_compDense20_p,"g_dr_metric_compDense20"=g_dr_metric_compDense20_p,
"h_metric_compSparse5"=h_metric_compSparse5_p,"g_metric_compSparse5"=g_metric_compSparse5_p,"g_dr_metric_compSparse5"=g_dr_metric_compSparse5_p,
"h_metric_compSparse10"=h_metric_compSparse10_p,"g_metric_compSparse10"=g_metric_compSparse10_p,"g_dr_metric_compSparse10"=g_dr_metric_compSparse10_p,
"h_metric_compSparse20"=h_metric_compSparse20_p,"g_metric_compSparse20"=g_metric_compSparse20_p,"g_dr_metric_compSparse20"=g_dr_metric_compSparse20_p,
"g_metric_faccompSparseSp5"= g_metric_FacCompSparse5_p,"h_metric_faccompSparseSp5"=h_metric_FacCompSparse5_p, "g_dr_metric_FacCompSparse5"=g_dr_metric_FacCompSparse5_p,
"g_metric_faccompSparseSp10"= g_metric_FacCompSparse10_p,"h_metric_faccompSparseSp10"=h_metric_FacCompSparse10_p,"g_dr_metric_FacCompSparse10"=g_dr_metric_FacCompSparse10_p,
"g_metric_faccompSparseSp20"= g_metric_FacCompSparse20_p,"h_metric_faccompSparseSp20"=h_metric_FacCompSparse20_p,"g_dr_metric_FacCompSparse20"=g_dr_metric_FacCompSparse20_p,
"g_metric_faccompDenseSp5"= g_metric_FacCompDense5_p,"h_metric_faccompDenseSp5"=h_metric_FacCompDense5_p, "g_dr_metric_FacCompDense5"=g_dr_metric_FacCompDense5_p,
"g_metric_faccompDenseSp10"= g_metric_FacCompDense10_p,"h_metric_faccompDenseSp10"=h_metric_FacCompDense10_p,"g_dr_metric_FacCompDense10"=g_dr_metric_FacCompDense10_p,
"g_metric_faccompDenseSp20"= g_metric_FacCompDense20_p,"h_metric_faccompDenseSp20"=h_metric_FacCompDense20_p,"g_dr_metric_FacCompDense20"=g_dr_metric_FacCompDense20_p
)
j_metric_facSparse5<-metrics_jsdm((!mfs5$overlap0$Rho)*mfs5$mean$Rho,fac = fac_inter[[7]],only_env = F)
j_metric_facSparse5_p<-metrics_jsdm(jsdm_tau(mfs5)$Tau_sign,fac = fac_inter[[7]],only_env = F)
all_part<-list("j_metric_e5"=j_metric_e5_p, "j_metric_e10"=j_metric_e10_p,"j_metric_e20"=j_metric_e20_p,
"j_metric_facDense5"=j_metric_facDense5_p,"j_metric_facDense10"=j_metric_facDense10_p,"j_metric_facDense20"=j_metric_facDense20,
"j_metric_facSparse5"=j_metric_facSparse5_p,"j_metric_facSparse10"=j_metric_facSparse10_p,"j_metric_facSparse20"=j_metric_facSparse20_p,
"j_metric_compDense5"=j_metric_compDense5_p,"j_metric_compDense10"=j_metric_compDense10_p,"j_metric_compDense20"=j_metric_compDense20_p,
"j_metric_compSparse5"=j_metric_compSparse5_p, "j_metric_compSparse10"=j_metric_compSparse10_p, "j_metric_compSparse20"=j_metric_compSparse20_p,"j_metric_faccompSparseSp5"=j_metric_FacCompSparse5_p, "j_metric_faccompSparseSp10"=j_metric_FacCompSparse10_p,
"j_metric_faccompSparseSp20"=j_metric_FacCompSparse20_p,
"j_metric_faccompDenseSp5"=j_metric_FacCompDense5_p,
"j_metric_faccompDenseSp10"=j_metric_FacCompDense10_p,
"j_metric_faccompDenseSp20"=j_metric_FacCompDense20_p,
"g_metric_e5"=g_metric_e5_p,"g_dr_metric_e5"=g_dr_metric_e5_p,"h_metric_e5"=h_metric_e5_p,
"g_metric_e10"=g_metric_e10_p,"g_dr_metric_e10"=g_dr_metric_e10_p,"h_metric_e10"=h_metric_e10_p,
"g_metric_e20"=g_metric_e20_p,"g_dr_metric_e20"=g_dr_metric_e20_p,"h_metric_e20"=h_metric_e20_p,
"h_metric_facDense5"=h_metric_facDense5_p,"g_metric_facDense5"=g_metric_facDense5_p,"g_dr_facDense5"=g_dr_metric_facDense5_p,
"h_metric_facDense10"=h_metric_facDense10_p,"g_metric_facDense10"=g_metric_facDense10_p,"g_dr_metric_facDense10"=g_dr_metric_facDense10_p,
"h_metric_facDense20"=h_metric_facDense20_p,"g_metric_facDense20"=g_metric_facDense20_p,"g_dr_metric_facDense20"=g_dr_metric_facDense20_p,
"h_metric_facSparse5"=h_metric_facSparse5_p,"g_metric_facSparse5"=g_metric_facSparse5_p,"g_dr_metric_facSparse5"=g_dr_metric_facSparse5_p,
"h_metric_facSparse10"=h_metric_facSparse10_p,"g_metric_facSparse10"=g_metric_facSparse10_p,"g_dr_metric_facSparse10"=g_dr_metric_facSparse10_p,
"h_metric_facSparse20"=h_metric_facSparse20_p,"g_metric_facSparse20"=g_metric_facSparse20_p,"g_dr_metric_facSparse20"=g_dr_metric_facSparse20_p,
"h_metric_compDense5"=h_metric_compDense5_p,"g_metric_compDense5"=g_metric_compDense5_p,"g_dr_metric_compDense5"=g_dr_metric_compDense5_p,
"h_metric_compDense10"=h_metric_compDense10_p,"g_metric_compDense10"=g_metric_compDense10_p,"g_dr_metric_compDense10"=g_dr_metric_compDense10_p,
"h_metric_compDense20"=h_metric_compDense20_p,"g_metric_compDense20"=g_metric_compDense20_p,"g_dr_metric_compDense20"=g_dr_metric_compDense20_p,
"h_metric_compSparse5"=h_metric_compSparse5_p,"g_metric_compSparse5"=g_metric_compSparse5_p,"g_dr_metric_compSparse5"=g_dr_metric_compSparse5_p,
"h_metric_compSparse10"=h_metric_compSparse10_p,"g_metric_compSparse10"=g_metric_compSparse10_p,"g_dr_metric_compSparse10"=g_dr_metric_compSparse10_p,
"h_metric_compSparse20"=h_metric_compSparse20_p,"g_metric_compSparse20"=g_metric_compSparse20_p,"g_dr_metric_compSparse20"=g_dr_metric_compSparse20_p,
"g_metric_faccompSparseSp5"= g_metric_FacCompSparse5_p,"h_metric_faccompSparseSp5"=h_metric_FacCompSparse5_p, "g_dr_metric_FacCompSparse5"=g_dr_metric_FacCompSparse5_p,
"g_metric_faccompSparseSp10"= g_metric_FacCompSparse10_p,"h_metric_faccompSparseSp10"=h_metric_FacCompSparse10_p,"g_dr_metric_FacCompSparse10"=g_dr_metric_FacCompSparse10_p,
"g_metric_faccompSparseSp20"= g_metric_FacCompSparse20_p,"h_metric_faccompSparseSp20"=h_metric_FacCompSparse20_p,"g_dr_metric_FacCompSparse20"=g_dr_metric_FacCompSparse20_p,
"g_metric_faccompDenseSp5"= g_metric_FacCompDense5_p,"h_metric_faccompDenseSp5"=h_metric_FacCompDense5_p, "g_dr_metric_FacCompDense5"=g_dr_metric_FacCompDense5_p,
"g_metric_faccompDenseSp10"= g_metric_FacCompDense10_p,"h_metric_faccompDenseSp10"=h_metric_FacCompDense10_p,"g_dr_metric_FacCompDense10"=g_dr_metric_FacCompDense10_p,
"g_metric_faccompDenseSp20"= g_metric_FacCompDense20_p,"h_metric_faccompDenseSp20"=h_metric_FacCompDense20_p,"g_dr_metric_FacCompDense20"=g_dr_metric_FacCompDense20_p
)
j_metric_compDense20<-metrics_jsdm((!mcmpd20$overlap0$Rho)*mcmpd20$mean$Rho,comp = comp_inter[[12]],only_env = F)
j_metric_compDense20_p<-metrics_jsdm(jsdm_tau(mcmpd20)$Tau_sign,comp = comp_inter[[12]],only_env = F)
all_part<-list("j_metric_e5"=j_metric_e5_p, "j_metric_e10"=j_metric_e10_p,"j_metric_e20"=j_metric_e20_p,
"j_metric_facDense5"=j_metric_facDense5_p,"j_metric_facDense10"=j_metric_facDense10_p,"j_metric_facDense20"=j_metric_facDense20,
"j_metric_facSparse5"=j_metric_facSparse5_p,"j_metric_facSparse10"=j_metric_facSparse10_p,"j_metric_facSparse20"=j_metric_facSparse20_p,
"j_metric_compDense5"=j_metric_compDense5_p,"j_metric_compDense10"=j_metric_compDense10_p,"j_metric_compDense20"=j_metric_compDense20_p,
"j_metric_compSparse5"=j_metric_compSparse5_p, "j_metric_compSparse10"=j_metric_compSparse10_p, "j_metric_compSparse20"=j_metric_compSparse20_p,"j_metric_faccompSparseSp5"=j_metric_FacCompSparse5_p, "j_metric_faccompSparseSp10"=j_metric_FacCompSparse10_p,
"j_metric_faccompSparseSp20"=j_metric_FacCompSparse20_p,
"j_metric_faccompDenseSp5"=j_metric_FacCompDense5_p,
"j_metric_faccompDenseSp10"=j_metric_FacCompDense10_p,
"j_metric_faccompDenseSp20"=j_metric_FacCompDense20_p,
"g_metric_e5"=g_metric_e5_p,"g_dr_metric_e5"=g_dr_metric_e5_p,"h_metric_e5"=h_metric_e5_p,
"g_metric_e10"=g_metric_e10_p,"g_dr_metric_e10"=g_dr_metric_e10_p,"h_metric_e10"=h_metric_e10_p,
"g_metric_e20"=g_metric_e20_p,"g_dr_metric_e20"=g_dr_metric_e20_p,"h_metric_e20"=h_metric_e20_p,
"h_metric_facDense5"=h_metric_facDense5_p,"g_metric_facDense5"=g_metric_facDense5_p,"g_dr_facDense5"=g_dr_metric_facDense5_p,
"h_metric_facDense10"=h_metric_facDense10_p,"g_metric_facDense10"=g_metric_facDense10_p,"g_dr_metric_facDense10"=g_dr_metric_facDense10_p,
"h_metric_facDense20"=h_metric_facDense20_p,"g_metric_facDense20"=g_metric_facDense20_p,"g_dr_metric_facDense20"=g_dr_metric_facDense20_p,
"h_metric_facSparse5"=h_metric_facSparse5_p,"g_metric_facSparse5"=g_metric_facSparse5_p,"g_dr_metric_facSparse5"=g_dr_metric_facSparse5_p,
"h_metric_facSparse10"=h_metric_facSparse10_p,"g_metric_facSparse10"=g_metric_facSparse10_p,"g_dr_metric_facSparse10"=g_dr_metric_facSparse10_p,
"h_metric_facSparse20"=h_metric_facSparse20_p,"g_metric_facSparse20"=g_metric_facSparse20_p,"g_dr_metric_facSparse20"=g_dr_metric_facSparse20_p,
"h_metric_compDense5"=h_metric_compDense5_p,"g_metric_compDense5"=g_metric_compDense5_p,"g_dr_metric_compDense5"=g_dr_metric_compDense5_p,
"h_metric_compDense10"=h_metric_compDense10_p,"g_metric_compDense10"=g_metric_compDense10_p,"g_dr_metric_compDense10"=g_dr_metric_compDense10_p,
"h_metric_compDense20"=h_metric_compDense20_p,"g_metric_compDense20"=g_metric_compDense20_p,"g_dr_metric_compDense20"=g_dr_metric_compDense20_p,
"h_metric_compSparse5"=h_metric_compSparse5_p,"g_metric_compSparse5"=g_metric_compSparse5_p,"g_dr_metric_compSparse5"=g_dr_metric_compSparse5_p,
"h_metric_compSparse10"=h_metric_compSparse10_p,"g_metric_compSparse10"=g_metric_compSparse10_p,"g_dr_metric_compSparse10"=g_dr_metric_compSparse10_p,
"h_metric_compSparse20"=h_metric_compSparse20_p,"g_metric_compSparse20"=g_metric_compSparse20_p,"g_dr_metric_compSparse20"=g_dr_metric_compSparse20_p,
"g_metric_faccompSparseSp5"= g_metric_FacCompSparse5_p,"h_metric_faccompSparseSp5"=h_metric_FacCompSparse5_p, "g_dr_metric_FacCompSparse5"=g_dr_metric_FacCompSparse5_p,
"g_metric_faccompSparseSp10"= g_metric_FacCompSparse10_p,"h_metric_faccompSparseSp10"=h_metric_FacCompSparse10_p,"g_dr_metric_FacCompSparse10"=g_dr_metric_FacCompSparse10_p,
"g_metric_faccompSparseSp20"= g_metric_FacCompSparse20_p,"h_metric_faccompSparseSp20"=h_metric_FacCompSparse20_p,"g_dr_metric_FacCompSparse20"=g_dr_metric_FacCompSparse20_p,
"g_metric_faccompDenseSp5"= g_metric_FacCompDense5_p,"h_metric_faccompDenseSp5"=h_metric_FacCompDense5_p, "g_dr_metric_FacCompDense5"=g_dr_metric_FacCompDense5_p,
"g_metric_faccompDenseSp10"= g_metric_FacCompDense10_p,"h_metric_faccompDenseSp10"=h_metric_FacCompDense10_p,"g_dr_metric_FacCompDense10"=g_dr_metric_FacCompDense10_p,
"g_metric_faccompDenseSp20"= g_metric_FacCompDense20_p,"h_metric_faccompDenseSp20"=h_metric_FacCompDense20_p,"g_dr_metric_FacCompDense20"=g_dr_metric_FacCompDense20_p
)
table<-as.data.frame(matrix(NA,nrow=63, ncol=8,dimnames=list(NULL,c("success_env","success_comp","success_fac","n_sp","Facilitation","Competition","sparsity","model"))))
for(i in 1:length(names(all_part))){
if(!is.null(all_part[[i]]$success_env)) table[i,"success_env"]<-all_part[[i]]$success_env
if(!is.null(all_part[[i]]$success_comp)) table[i,"success_comp"]<-all_part[[i]]$success_comp
if(!is.null(all_part[[i]]$success_fac)) table[i,"success_fac"]<-all_part[[i]]$success_fac
if(length(grep("5",names(all_part)[i]))>0) table[i,"n_sp"]<-5
if(length(grep("10",names(all_part)[i]))>0) table[i,"n_sp"]<-10
if(length(grep("20",names(all_part)[i]))>0) table[i,"n_sp"]<-20
if(length(grep("fac",names(all_part)[i]))>0){ table[i,"Facilitation"]<-"facilitation"}#else{table[i,"facilition"]<-NULL}
if(length(grep("comp",names(all_part)[i]))>0){ table[i,"Competition"]<-"competition"}#else{table[i,"competition"]<-NULL}
#if(!(length(grep("comp",names(all_part)[i]))>0) | length(grep("fac",names(all_part)[i]))>0) {table[i,"Comp_fac"]<-"comp_fac"}else{table[i,"Comp_fac"]<-NULL}
if(length(grep("Dense",names(all_part)[i]))>0){ table[i,"sparsity"]<-"dense"}else{table[i,"sparsity"]<-"sparse"}
if(length(grep("j_",names(all_part)[i]))>0) table[i,"model"]<-"CM"
if(length(grep("g_m",names(all_part)[i]))>0) table[i,"model"]<-"GJAM"
if(length(grep("g_dr",names(all_part)[i]))>0) table[i,"model"]<-"DR-GJAM"
if(length(grep("h_",names(all_part)[i]))>0) table[i,"model"]<-"HMSC"
}
table_comp<-table[which(!is.na(table$success_comp)),]
table_fac<-table[which(!is.na(table$success_fac)),]
tc<-cbind(table_comp$success_comp,table_comp$model,rep("All",nrow(table_comp)),rep("Int",nrow(table_comp)))
tc<-rbind(tc,cbind(table_comp[which(table_comp$n_sp==5),"success_comp"],table_comp[which(table_comp$n_sp==5),"model"],rep("5",sum(table_comp$n_sp==5)),rep("Int",sum(table_comp$n_sp==5))))
tc<-rbind(tc,cbind(table_comp[which(table_comp$n_sp==10),"success_comp"],table_comp[which(table_comp$n_sp==10),"model"],rep("10",sum(table_comp$n_sp==10)),rep("Int",sum(table_comp$n_sp==10))))
tc<-rbind(tc,cbind(table_comp[which(table_comp$n_sp==20),"success_comp"],table_comp[which(table_comp$n_sp==20),"model"],rep("20",sum(table_comp$n_sp==20)),rep("Int",sum(table_comp$n_sp==20))))
tc<-rbind(tc,cbind(table_comp[which(table_comp$sparsity=="dense"),"success_comp"],table_comp[which(table_comp$sparsity=="dense"),"model"],rep("dense",sum(table_comp$sparsity=="dense")),rep("Int",sum(table_comp$sparsity=="dense"))))
tc<-rbind(tc,cbind(table_comp[which(table_comp$sparsity=="sparse"),"success_comp"],table_comp[which(table_comp$sparsity=="sparse"),"model"],rep("sparse",sum(table_comp$sparsity=="sparse")),rep("Int",sum(table_comp$sparsity=="sparse"))))
tc<-rbind(tc,cbind(table_comp$success_env,table_comp$model,rep("All_env",nrow(table_comp)),rep("Env",nrow(table_comp))))
tc<-rbind(tc,cbind(table_comp[which(table_comp$n_sp==5),"success_env"],table_comp[which(table_comp$n_sp==5),"model"],rep("5_env",sum(table_comp$n_sp==5)),rep("Env",sum(table_comp$n_sp==5))))
tc<-rbind(tc,cbind(table_comp[which(table_comp$n_sp==10),"success_env"],table_comp[which(table_comp$n_sp==10),"model"],rep("10_env",sum(table_comp$n_sp==10)),rep("Env",sum(table_comp$n_sp==10))))
tc<-rbind(tc,cbind(table_comp[which(table_comp$n_sp==20),"success_env"],table_comp[which(table_comp$n_sp==20),"model"],rep("20_env",sum(table_comp$n_sp==20)),rep("Env",sum(table_comp$n_sp==20))))
tc<-data.frame("success"=as.numeric(tc[,1]),"model"=tc[,2],"fac"=tc[,3],"int"=rep("Competition",nrow(tc)),"col"=tc[,4])
tf<-cbind(table_fac$success_fac,table_fac$model,rep("All",nrow(table_fac)),rep("Int",nrow(table_fac)))
tf<-rbind(tf,cbind(table_fac[which(table_fac$n_sp==5),"success_fac"],table_fac[which(table_fac$n_sp==5),"model"],rep("5",sum(table_fac$n_sp==5)),rep("Int",sum(table_fac$n_sp==5))))
tf<-rbind(tf,cbind(table_fac[which(table_fac$n_sp==10),"success_fac"],table_fac[which(table_fac$n_sp==10),"model"],rep("10",sum(table_fac$n_sp==10)),rep("Int",sum(table_fac$n_sp==10))))
tf<-rbind(tf,cbind(table_fac[which(table_fac$n_sp==20),"success_fac"],table_fac[which(table_fac$n_sp==20),"model"],rep("20",sum(table_fac$n_sp==20)),rep("Int",sum(table_fac$n_sp==20))))
tf<-rbind(tf,cbind(table_fac[which(table_fac$sparsity=="dense"),"success_fac"],table_fac[which(table_fac$sparsity=="dense"),"model"],rep("dense",sum(table_fac$sparsity=="dense")),rep("Int",sum(table_fac$sparsity=="dense"))))
tf<-rbind(tf,cbind(table_fac[which(table_fac$sparsity=="sparse"),"success_fac"],table_fac[which(table_fac$sparsity=="sparse"),"model"],rep("sparse",sum(table_fac$sparsity=="sparse")),rep("Int",sum(table_fac$sparsity=="sparse"))))
tf<-rbind(tf,cbind(table_fac$success_env,table_fac$model,rep("All_env",nrow(table_fac)),rep("Env",nrow(table_fac))))
tf<-rbind(tf,cbind(table_fac[which(table_fac$n_sp==5),"success_env"],table_fac[which(table_fac$n_sp==5),"model"],rep("5_env",sum(table_fac$n_sp==5)),rep("Env",sum(table_fac$n_sp==5))))
tf<-rbind(tf,cbind(table_fac[which(table_fac$n_sp==10),"success_env"],table_fac[which(table_fac$n_sp==10),"model"],rep("10_env",sum(table_fac$n_sp==10)),rep("Env",sum(table_fac$n_sp==10))))
tf<-rbind(tf,cbind(table_fac[which(table_fac$n_sp==20),"success_env"],table_fac[which(table_fac$n_sp==20),"model"],rep("20_env",sum(table_fac$n_sp==20)),rep("Env",sum(table_fac$n_sp==20))))
tf<-data.frame("success"=as.numeric(tf[,1]),"model"=tf[,2],"fac"=tf[,3],"int"=rep("Facilitation",nrow(tf)),"col"=tf[,4])
table<-rbind(tf,tc)
p<-ggplot(data=table)+geom_boxplot(aes(y=as.numeric(success),x=as.factor(fac),fill=as.factor(col)))+
scale_x_discrete(name="Parameters", breaks=c("All","5","10","20","dense","sparse","All_env","5_env","10_env","20_env"),
labels=c("All","5","10","20","dense","sparse","All","5","10","20"),limits=c("All","5","10","20","dense","sparse","All_env","5_env","10_env","20_env"))+
scale_y_continuous(name="% success")+
scale_fill_discrete(name = "Success in retrieving", labels = c("Sensibility (non int.)","Sensitivity (int.)"))+theme_bw()+theme(axis.text.x = element_text(angle = 45, hjust = 0.5),legend.position="top",plot.title = element_text(hjust = 0.5))+
facet_grid( int~model , scales="free") +ggtitle("Pairs indentification by partial correlation")
p
pdf("plot_partial_inter.pdf")
p<-ggplot(data=table)+geom_boxplot(aes(y=as.numeric(success),x=as.factor(fac),fill=as.factor(col)))+
scale_x_discrete(name="Parameters", breaks=c("All","5","10","20","dense","sparse","All_env","5_env","10_env","20_env"),
labels=c("All","5","10","20","dense","sparse","All","5","10","20"),limits=c("All","5","10","20","dense","sparse","All_env","5_env","10_env","20_env"))+
scale_y_continuous(name="% success")+
scale_fill_discrete(name = "Success in retrieving", labels = c("Sensibility (non int.)","Sensitivity (int.)"))+theme_bw()+theme(axis.text.x = element_text(angle = 45, hjust = 0.5),legend.position="top",plot.title = element_text(hjust = 0.5))+
facet_grid( int~model , scales="free") +ggtitle("Pairs indentification by partial correlation")
p
dev.off()
p<-ggplot(data=table)+geom_boxplot(aes(y=as.numeric(success),x=as.factor(fac),fill=as.factor(col)))+
scale_x_discrete(name="Parameters", breaks=c("All","5","10","20","dense","sparse","All_env","5_env","10_env","20_env"),
labels=c("All","5","10","20","dense","sparse","All","5","10","20"),limits=c("All","5","10","20","dense","sparse","All_env","5_env","10_env","20_env"))+
scale_y_continuous(name="% success")+
scale_fill_discrete(name = "Success in retrieving", labels = c("Sensibility (non int.)","Sensitivity (int.)"))+theme_bw()+theme(axis.text.x = element_text(angle = 45, hjust = 0.5),legend.position="top",plot.title = element_text(hjust = 0.5))+
facet_grid( int~model , scales="free") +ggtitle("Pairs indentification by partial correlation")
p
pdf("plot_partial_inter.pdf")
p<-ggplot(data=table)+geom_boxplot(aes(y=as.numeric(success),x=as.factor(fac),fill=as.factor(col)))+
scale_x_discrete(name="Parameters", breaks=c("All","5","10","20","dense","sparse","All_env","5_env","10_env","20_env"),
labels=c("All","5","10","20","dense","sparse","All","5","10","20"),limits=c("All","5","10","20","dense","sparse","All_env","5_env","10_env","20_env"))+
scale_y_continuous(name="% success")+
scale_fill_discrete(name = "Success in retrieving", labels = c("Sensibility (non int.)","Sensitivity (int.)"))+theme_bw()+theme(axis.text.x = element_text(angle = 45, hjust = 0.5),legend.position="top",plot.title = element_text(hjust = 0.5))+
facet_grid( int~model , scales="free") +ggtitle("Pairs indentification by partial correlation")
p
dev.off()
ALL4<-function(jsdm_mod,gjam_mod,hmsc_mod,interact=diag(5)){
par(mfrow=c(2,2),oma = c(1, 1, 1, 1))
corrplot(jsdm_mod, diag = FALSE, order = "original",tl.pos = "ld", tl.cex = 0.5, method = "color",col=cols(200), type = "lower")
title("Partial correlation  CM ")
corrplot(gjam_mod, diag = FALSE, order = "original",tl.pos = "ld", tl.cex = 0.5, method = "color",col=cols(200), type = "lower")
title("Partial correlation GJAM")
corrplot(hmsc_mod, diag = FALSE, order = "original",tl.pos = "ld", tl.cex = 0.5, method = "color",col=cols(200), type = "lower")
title("Partial correlation HMSC")
corrplot(interact, diag = FALSE, order = "original",tl.pos = "ld", tl.cex = 0.5, method = "color",col=cols(200), type = "lower")
title("True interactions")
}
ALL4(mod_list_Tau$jsdm,mod_list_Tau$gjam,mod_list_Tau$hmsc,diag(5))
ALL3<-function(jsdm_mod,gjam_mod,hmsc_mod,interact=diag(5)){
par(mfrow=c(2,2),oma = c(1, 1, 1, 1))
corrplot(jsdm_mod, diag = FALSE, order = "original",tl.pos = "ld", tl.cex = 0.5, method = "color",col=cols(200), type = "lower")
title("R  CM ")
corrplot(gjam_mod, diag = FALSE, order = "original",tl.pos = "ld", tl.cex = 0.5, method = "color",col=cols(200), type = "lower")
title("R GJAM")
corrplot(hmsc_mod, diag = FALSE, order = "original",tl.pos = "ld", tl.cex = 0.5, method = "color",col=cols(200), type = "lower")
title("R HMSC")
corrplot(interact, diag = FALSE, order = "original",tl.pos = "ld", tl.cex = 0.5, method = "color",col=cols(200), type = "lower")
title("True interactions")
}
ALL3(mod_list_Rho$jsdm,mod_list_Rho$gjam,mod_list_Rho$hmsc,diag(5))
Tau_list
mod_list_Tau
jsdm_tau<-function(jsdm_mod){
nsamples<-jsdm_mod$mcmc.info$n.samples
ns<- ncol(jsdm_mod$model$cluster1$data()$Y)
postT<-array(dim=c(ns,ns,nsamples))
for(i in 1:nsamples){
postT[,,i]<- -stats::cov2cor(solve(jsdm_mod$sims.list$Rho[i,,]+0.1*diag(ns)))
}
postTMean = apply(postT,c(1,2),mean)
postTUp=apply(postT,c(1,2),quantile,0.95)
postTLo=apply(postT,c(1,2),quantile,0.05)
Toplot_T<-postTMean*(!(postTUp>0 & postTLo<0))
return(list(Tau=postTMean,Tau_sign=Toplot_T))
}
jsdm_rho<-function(jsdm_mod){
return(list(Rho=model$mean$Rho,Rho_sign= (!model$overlap0$Rho)*model$mean$Rho))
}
jsdm_rho<-function(jsdm_mod){
return(list(Rho=jsdm_mod$mean$Rho,Rho_sign= (!jsdm_mod$overlap0$Rho)*jsdm_mod$mean$Rho))
}
jsdm_files_list<-list(EnvEvenSp5="model-2019-04-09-19-02-16.rda",EnvEvenSp10="model-2019-04-10-08-26-20.rda",EnvEvenSp20 ="model-2019-04-11-19-06-02.rda",
FacDenseSp5="model-jsdm-2019-05-06-18-41-20.rda",FacDenseSp10="model-2019-04-12-06-59-42.rda",FacDenseSp20="model-2019-04-13-17-22-12.rda",
FacSparseSp5 ="model-2019-04-13-17-51-16.rda",FacSparseSp10="model-2019-04-14-05-17-58.rda",FacSparseSp20 ="model-2019-04-15-15-34-20.rda",
CompDenseSp5 ="model-2019-04-15-16-03-39.rda",CompDenseSp10="model-2019-04-16-03-39-17.rda",CompDenseSp20="model-2019-04-17-14-00-45.rda",
CompSparseSp5="model-2019-04-17-14-30-01.rda",CompSparseSp10 ="model-2019-04-18-01-55-45.rda",CompSparseSp20="model-2019-04-19-12-40-30.rda"
, FacCompDenseSp5="model-2019-04-19-13-08-47.rda",FacCompDenseSp10="model-2019-04-20-00-37-25.rda",FacCompDenseSp20="model-2019-04-21-11-10-34.rda"
, FacCompSparseSp5="model-2019-04-21-11-39-52.rda",FacCompSparseSp10="model-2019-04-21-22-58-58.rda",FacCompSparseSp20="model-2019-04-23-09-42-18.rda")
jsdm_list<- lapply(jsdm_files_list, load_object)
jsdm_metrics<-mapply(metrics_jsdm,jsdm_list,fac_inter,comp_inter,SIMPLIFY = FALSE)
jsdm_rho_list<- lapply(jsdm_list,jsdm_rho )
jsdm_tau_list<- lapply(jsdm_list,jsdm_tau )
metrics_jsdm<-function(model,fac=NULL,comp=NULL,only_env=T){
if(is.null(dim(fac))&is.null(dim(comp))){
only_env=T;
fac=NULL
comp=NULL
}else{
if(is.null(dim(fac))){
only_env=F
fac=NULL
}else{
only_env=F
comp=NULL
}
}
Rho<-(!model$overlap0$Rho)*model$mean$Rho
#{
if(!is.null(comp) & !is.null(fac)){
fac_comp <- fac-comp
TP_comp <- FN_comp <-TP_fac <- FN_fac <- FP <- TN <- wrong <- 0
for(i in 1:(nrow(Rho)-1)){
for(j in (i+1):ncol(Rho)){
if(fac_comp[i,j]>0 & Rho[i,j] >0)
TP_fac=TP_fac+1
if(fac_comp[i,j]>0 & Rho[i,j] == 0)
FN_fac=FN_fac+1
if(fac_comp[i,j]==0 & Rho[i,j] == 0)
TN=TN+1
if(fac_comp[i,j]==0 & Rho[i,j] != 0)
FP=FP+1
if(fac_comp[i,j]< 0 & Rho[i,j] < 0)
TP_comp=TP_comp+1
if(fac_comp[i,j]<0 & Rho[i,j] == 0)
FN_comp=FN_comp+1
if((fac_comp[i,j]<0 & Rho[i,j] > 0) | (fac_comp[i,j]>0 & Rho[i,j] < 0))
wrong=wrong+1
}
}
}else{
if(!is.null(comp)){
TP_comp <- FN_comp <- FP <- TN <- wrong <- 0
TP_fac <- FN_fac<-NULL
for(i in 1:(nrow(Rho)-1)){
for(j in (i+1):ncol(Rho)){
if(comp[i,j]>0 & Rho[i,j] <0)
TP_comp=TP_comp+1
if(comp[i,j]>0 & Rho[i,j] >0)
wrong=wrong+1
if(comp[i,j]>0 & Rho[i,j] == 0)
FN_comp=FN_comp+1
if(comp[i,j]==0 & Rho[i,j] == 0)
TN=TN+1
if(comp[i,j]==0 & Rho[i,j] != 0)
FP=FP+1
}
#    }
#    }
}
}
if(!is.null(fac)){
TP_fac <- FN_fac <- FP <- TN <- wrong <- 0
TP_comp <- FN_comp<-NULL
for(i in 1:(nrow(Rho)-1)){
for(j in (i+1):ncol(Rho)){
if(fac[i,j]>0 & Rho[i,j] >0)
TP_fac=TP_fac+1
if(fac[i,j]>0 & Rho[i,j] <0)
wrong = wrong+1
if(fac[i,j]>0 & Rho[i,j] == 0)
FN_fac=FN_fac+1
if(fac[i,j]==0 & Rho[i,j] == 0)
TN=TN+1
if(fac[i,j]==0 & Rho[i,j] != 0)
FP=FP+1
}
}
}
}
if(only_env){
FP <- TN <- 0
TP_fac <- FN_fac<-TP_comp <- FN_comp<-wrong<-NULL
for(i in 1:(nrow(Rho)-1)){
for(j in (i+1):nrow(Rho)){
if(Rho[i,j] != 0)
FP=FP+1
if(Rho[i,j] == 0)
TN=TN+1
}
}
}
success_env<-TN/(TN+FP)
if(!is.null(TP_comp)){success_comp <- TP_comp/(TP_comp+FN_comp)}else{ success_comp = NULL}
if(!is.null(TP_fac)) {success_fac <- TP_fac/(TP_fac+FN_fac)}else{ success_fac = NULL}
list("FP"=FP,"TN"=TN,"TP_comp"=TP_comp,"FN_comp"=FN_comp,"TP_fac"=TP_fac,"FN_fac"=FN_fac,
"wrong"=wrong,"success_env"=success_env,"success_comp"=success_comp,"success_fac"=success_fac)
}
jsdm_metrics<-mapply(metrics_jsdm,jsdm_list,fac_inter,comp_inter,SIMPLIFY = FALSE)
jsdm_rho_list<- lapply(jsdm_list,jsdm_rho )
jsdm_tau_list<- lapply(jsdm_list,jsdm_tau )
hm_inter<-function(mod){
getOmega = function(a,r=1)
return(crossprod(a$Lambda[[r]]))
ns<-mod$ns
nsamples<-mod$samples
nchains<-2
postOmega1 = array(unlist(lapply(mod$postList[[1]],getOmega)),c(ns,ns,mod$samples))
postOmega2 = array(unlist(lapply(mod$postList[[2]],getOmega)),c(ns,ns,mod$samples))
postOmega<-abind(postOmega1,postOmega2,along=3)
postOmegaMean = apply(postOmega,c(1,2),mean)
postOmegaUp=apply(postOmega,c(1,2),quantile,0.95)
postOmegaLo=apply(postOmega,c(1,2),quantile,0.05)
postR<-array(dim=c(ns,ns,nchains*nsamples))
postT<-array(dim=c(ns,ns,nchains*nsamples))
for(i in 1:dim(postOmega)[3]){
postR[,,i]<-stats::cov2cor(postOmega[,,i])
postT[,,i]<- -stats::cov2cor(solve(postOmega[,,i]+diag(ns)))
}
postRMean = apply(postR,c(1,2),mean)
postRUp=apply(postR,c(1,2),quantile,0.95)
postRLo=apply(postR,c(1,2),quantile,0.05)
postTMean = apply(postT,c(1,2),mean)
postTUp=apply(postT,c(1,2),quantile,0.95)
postTLo=apply(postT,c(1,2),quantile,0.05)
Toplot_R<-postRMean*(!(postRUp>0 & postRLo<0))
Toplot_T<-postTMean*(!(postTUp>0 & postTLo<0))
return(list(Rho_mean=postRMean,Rho_sign=Toplot_R, Tau=postTMean,Tau_sign=Toplot_T))
}
R_list<-lapply(hmsc_list,hm_inter)
Tau_list<-lapply(R_list, function(x) list(Rho_mean=x$Tau,Rho_sign=x$Tau_sign))
hm_inter<-function(mod){
getOmega = function(a,r=1)
return(crossprod(a$Lambda[[r]]))
ns<-mod$ns
nsamples<-mod$samples
nchains<-2
postOmega1 = array(unlist(lapply(mod$postList[[1]],getOmega)),c(ns,ns,mod$samples))
postOmega2 = array(unlist(lapply(mod$postList[[2]],getOmega)),c(ns,ns,mod$samples))
postOmega<-abind(postOmega1,postOmega2,along=3)
postOmegaMean = apply(postOmega,c(1,2),mean)
postOmegaUp=apply(postOmega,c(1,2),quantile,0.95)
postOmegaLo=apply(postOmega,c(1,2),quantile,0.05)
postR<-array(dim=c(ns,ns,nchains*nsamples))
postT<-array(dim=c(ns,ns,nchains*nsamples))
for(i in 1:dim(postOmega)[3]){
postR[,,i]<-stats::cov2cor(postOmega[,,i])
postT[,,i]<- -stats::cov2cor(solve(postOmega[,,i]+diag(ns)))
}
postRMean = apply(postR,c(1,2),mean)
postRUp=apply(postR,c(1,2),quantile,0.95)
postRLo=apply(postR,c(1,2),quantile,0.05)
postTMean = apply(postT,c(1,2),mean)
postTUp=apply(postT,c(1,2),quantile,0.95)
postTLo=apply(postT,c(1,2),quantile,0.05)
Toplot_R<-postRMean*(!(postRUp>0 & postRLo<0))
Toplot_T<-postTMean*(!(postTUp>0 & postTLo<0))
return(list(Rho_mean=postRMean,Rho_sign=Toplot_R, Tau=postTMean,Tau_sign=Toplot_T))
}
hmsc_files_list<-list(EnvEvenSp5 ="./new_HMmodels/hm5env.rda",EnvEvenSp10="./new_HMmodels/hm10env.rda" ,EnvEvenSp20="./new_HMmodels/hm20env.rda"
,FacDenseSp5 ="./new_HMmodels/hm5fd.rda" ,FacDenseSp10 ="./new_HMmodels/hm10fd.rda",FacDenseSp20="./new_HMmodels/hm20fd.rda",
FacSparseSp5="./new_HMmodels/hm5fs.rda",FacSparseSp10="./new_HMmodels/hm10fs.rda",FacSparseSp20 ="./new_HMmodels/hm20fs.rda" ,
CompDenseSp5="./new_HMmodels/hm5cmpd.rda",CompDenseSp10 ="./new_HMmodels/hm10cmpd.rda" ,CompDenseSp20="./new_HMmodels/hm20cmpd.rda" ,
CompSparseSp5="./new_HMmodels/hm5cmps.rda",CompSparseSp10  ="./new_HMmodels/hm10cmps.rda",CompSparseSp20="./new_HMmodels/hm20cmps.rda",
FacCompDenseSp5 ="./new_HMmodels/hmcmp_facd5.rda",FacCompDenseSp10="./new_HMmodels/hmcmp_facd10.rda" ,FacCompDenseSp20 ="./new_HMmodels/hmcmp_facd20.rda" ,
FacCompSparseSp5 ="./new_HMmodels/hmcmp_facs5.rda",FacCompSparseSp10="./new_HMmodels/hmcmp_facs10.rda" ,FacCompSparseSp20="./new_HMmodels/hmcmp_facs20.rda" )
hmsc_list<- lapply(hmsc_files_list, load_object)
hmsc_convergence_par<- lapply(hmsc_list, hm_conv)
hmsc_conv_dataset<- data.frame()
for(j in 1:length(hmsc_list)){
tmp1<- as.data.frame(hmsc_convergence_par[[j]][1])
colnames(tmp1)<-c("value","parameter")
#tmp1<-tmp1[,-2]
tmp1$type<-"Effective Size"
tmp1$Filtering<-sim_names[[j]]
tmp2<- as.data.frame(hmsc_convergence_par[[j]][2])
colnames(tmp2)<-c("value", "value2","parameter")
tmp2<-tmp2[,-2]
tmp2$type<-"Rhat"
tmp2$Filtering<-sim_names[[j]]
hmsc_conv_dataset<-rbind(hmsc_conv_dataset,tmp1,tmp2)
}
for(i in 1:dim(hmsc_conv_dataset)[1]){
if(length(grep("Fac",hmsc_conv_dataset$Filtering[i]))>0){ hmsc_conv_dataset$gentype[i]<-"Facilitation"}
if(length(grep("Comp",hmsc_conv_dataset$Filtering[i]))>0){ hmsc_conv_dataset$gentype[i]<-"Competition"}
if(length(grep("Env",hmsc_conv_dataset$Filtering[i]))>0){ hmsc_conv_dataset$gentype[i]<-"Environmental"}
if((length(grep("Fac",hmsc_conv_dataset$Filtering[i]))>0)&(length(grep("Comp",hmsc_conv_dataset$Filtering[i]))>0)){
hmsc_conv_dataset$gentype[i]<-"Comp+Fac"
}
}
hmsc_files_list<-list(EnvEvenSp5 ="./new_HMmodels/hm5env.rda",EnvEvenSp10="./new_HMmodels/hm10env.rda" ,EnvEvenSp20="./new_HMmodels/hm20env.rda"
,FacDenseSp5 ="./new_HMmodels/hm5fd.rda" ,FacDenseSp10 ="./new_HMmodels/hm10fd.rda",FacDenseSp20="./new_HMmodels/hm20fd.rda",
FacSparseSp5="./new_HMmodels/hm5fs.rda",FacSparseSp10="./new_HMmodels/hm10fs.rda",FacSparseSp20 ="./new_HMmodels/hm20fs.rda" ,
CompDenseSp5="./new_HMmodels/hm5cmpd.rda",CompDenseSp10 ="./new_HMmodels/hm10cmpd.rda" ,CompDenseSp20="./new_HMmodels/hm20cmpd.rda" ,
CompSparseSp5="./new_HMmodels/hm5cmps.rda",CompSparseSp10  ="./new_HMmodels/hm10cmps.rda",CompSparseSp20="./new_HMmodels/hm20cmps.rda",
FacCompDenseSp5 ="./new_HMmodels/hmcmp_facd5.rda",FacCompDenseSp10="./new_HMmodels/hmcmp_facd10.rda" ,FacCompDenseSp20 ="./new_HMmodels/hmcmp_facd20.rda" ,
FacCompSparseSp5 ="./new_HMmodels/hmcmp_facs5.rda",FacCompSparseSp10="./new_HMmodels/hmcmp_facs10.rda" ,FacCompSparseSp20="./new_HMmodels/hmcmp_facs20.rda" )
hmsc_list<- lapply(hmsc_files_list, load_object)
hm_conv<-function(names){
mod<-load_object(name)
codaList = convertToCodaObject(mod)
#convergence histograms
##NEW convergence histograms
n_eff_beta<- as.data.frame(effectiveSize(codaList$Beta))
colnames(n_eff_beta)<- c("value")
n_eff_beta$parameter<- "beta"
n_eff_sigma<- as.data.frame(effectiveSize(codaList$Omega[[1]]))
colnames(n_eff_sigma)<- c("value")
n_eff_sigma$parameter<- "correlation"
neff<- rbind(n_eff_beta,n_eff_sigma)
# p<- ggplot(neff, aes(x=value, color=parameter,fill=parameter)) +
#   geom_histogram( alpha=0.4, position="identity",binwidth =50) + xlab("effective size") +
#   scale_color_brewer(palette="Dark2")+scale_fill_brewer(palette="Dark2")+
#   ggtitle("Effective size for the parameters beta and coefficients of correlation matrix")
# plot(p)
#
Rhat_beta<-as.data.frame(gelman.diag(codaList$Beta,multivariate=FALSE)$psrf)
Rhat_beta$parameter<- "beta"
Rhat_sigma<- as.data.frame(gelman.diag(codaList$Omega[[1]], multivariate=FALSE)$psrf)
Rhat_sigma$parameter<- "correlation"
Rhat<- rbind(Rhat_beta,Rhat_sigma)
# p2<- ggplot(Rhat, aes(x= Rhat$`Point est.`, color=parameter,fill=parameter)) +
#   geom_histogram( alpha=0.4, position="identity",binwidth =0.01) +
#   scale_color_brewer(palette="Dark2")+scale_fill_brewer(palette="Dark2")+ xlab("Rhat") +
#   ggtitle("Rhat for the parameters beta and the coefficients of correlation matrix")
# plot(p2)
return(list(neff=neff,Rhat=Rhat))
}
hmsc_files_list<-list(EnvEvenSp5 ="./new_HMmodels/hm5env.rda",EnvEvenSp10="./new_HMmodels/hm10env.rda" ,EnvEvenSp20="./new_HMmodels/hm20env.rda"
,FacDenseSp5 ="./new_HMmodels/hm5fd.rda" ,FacDenseSp10 ="./new_HMmodels/hm10fd.rda",FacDenseSp20="./new_HMmodels/hm20fd.rda",
FacSparseSp5="./new_HMmodels/hm5fs.rda",FacSparseSp10="./new_HMmodels/hm10fs.rda",FacSparseSp20 ="./new_HMmodels/hm20fs.rda" ,
CompDenseSp5="./new_HMmodels/hm5cmpd.rda",CompDenseSp10 ="./new_HMmodels/hm10cmpd.rda" ,CompDenseSp20="./new_HMmodels/hm20cmpd.rda" ,
CompSparseSp5="./new_HMmodels/hm5cmps.rda",CompSparseSp10  ="./new_HMmodels/hm10cmps.rda",CompSparseSp20="./new_HMmodels/hm20cmps.rda",
FacCompDenseSp5 ="./new_HMmodels/hmcmp_facd5.rda",FacCompDenseSp10="./new_HMmodels/hmcmp_facd10.rda" ,FacCompDenseSp20 ="./new_HMmodels/hmcmp_facd20.rda" ,
FacCompSparseSp5 ="./new_HMmodels/hmcmp_facs5.rda",FacCompSparseSp10="./new_HMmodels/hmcmp_facs10.rda" ,FacCompSparseSp20="./new_HMmodels/hmcmp_facs20.rda" )
hmsc_convergence_par<- lapply(hmsc_files_list, hm_conv)
